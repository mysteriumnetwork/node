stages:
  - prepare
  - test
  - pre-release
  - build
  - release-snapshot
  - release-tag
  - post-release

variables:
  BUILD_COMMIT: $CI_COMMIT_SHORT_SHA
  BUILD_BRANCH: $CI_COMMIT_REF_NAME
  BUILD_BRANCH_SAFE: $CI_COMMIT_REF_SLUG
  BUILD_TAG: $CI_COMMIT_TAG
  BUILD_NUMBER: $CI_PIPELINE_ID
  GITHUB_OWNER: mysteriumnetwork
  GITHUB_REPO: node
  GITHUB_SNAPSHOT_REPO: node-builds

  GO_PACKAGE: github.com/mysteriumnetwork/node
  GIT_CLONE_PATH: /home/gitlab-runner/go/src/$GO_PACKAGE
  GOFLAGS: "-count=1" # Supersedes GOCACHE=off, see: https://github.com/golang/go/issues/29378#issuecomment-449383809

before_script:
  # load vars generated by prepare:env
  - source build/env.sh
  - echo "${DOCKERHUB_PASSWORD}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin || true

after_script:
  # docker based jobs leave files owned by root
  - sudo chown -R gitlab-runner:gitlab-runner $GOPATH

env:
  stage: prepare
  tags: [go]
  artifacts:
    paths: [build/env.sh]
  before_script:
    - ''
  script: go run mage.go -v GenerateEnvFile

checks:
  stage: test
  tags: [go]
  retry: 1
  script:
    - go run mage.go -v Check

test:
  stage: test
  tags: [go]
  retry: 1
  script:
    - go run mage.go -v TestWithCoverage
    - touch $CI_PROJECT_DIR/success
  after_script:
    - |
      if [ -e success ]; then
        bash <(curl -s https://codecov.io/bash)
      fi

test-e2e-basic:
  stage: test
  tags: [go,high_performance]
  retry: 1
  script: go run mage.go -v TestE2EBasic

test-e2e-nat:
  stage: test
  tags: [go,high_performance]
  retry: 1
  script: go run mage.go -v TestE2ENAT

# with the new payments, we're making a breaking change, so no compatibility for now
# test-e2e-compatibility:
#   stage: test
#   tags: [go,high_performance]
#   script: go run mage.go -v TestE2ECompatibility

test-install-script:
  stage: test
  tags: [go,dedicated]
  script: go run mage.go -v TestInstallScript
  only:
    - master

create-bucket:
  stage: pre-release
  tags: [go]
  script: go run mage.go -v MakeBucket

package:linux-amd64:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageLinuxAmd64

package:linux-arm:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageLinuxArm

package:linux-debian-amd64:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageLinuxDebianAmd64

package:linux-debian-arm:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageLinuxDebianArm

package:linux-debian-arm64:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageLinuxDebianArm64

package:linux-raspberry-image:
  stage: build
  tags: [go,high_performance]
  script: go run mage.go -v PackageLinuxRaspberryImage

package:macos-amd64:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageMacOSAmd64

package:macos-arm64:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageMacOSArm64

package:windows-amd64:
   stage: build
   tags: [go]
   script: go run mage.go -v PackageWindowsAmd64

package:android:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageAndroid

package:swagger-redoc-docker:
  stage: build
  tags: [go]
  script: go run mage.go -v PackageDockerSwaggerRedoc

release-snapshot:release:
  stage: release-snapshot
  tags: [go]
  script: go run mage.go -v ReleaseGithubSnapshot

release-snapshot:docker:
  stage: release-snapshot
  tags: [go]
  script: go run mage.go -v ReleaseDockerSnapshot

release-snapshot:debian-ppa:
  stage: release-snapshot
  tags: [go]
  script: go run mage.go -v ReleaseDebianPPASnapshot
  only:
    - master

release-snapshot:goreport:
  stage: release-snapshot
  tags: [go]
  retry: 1
  script: bin/release_goreport
  only:
    - master

release-snapshot:android-sdk:
  stage: release-snapshot
  tags: [go]
  script: go run mage.go -v ReleaseAndroidSDKSnapshot
  only:
    - master

release-nightly:node:
  stage: release-snapshot
  tags: [go]
  script: go run mage.go -v ReleaseGithubNightly
  only:
    - master


release-tag:release:
  stage: release-tag
  tags: [go]
  script: go run mage.go -v ReleaseGithubTag

release-tag:avado:
  stage: release-tag
  tags: [go]
  script: go run mage.go -v CreateAvadoPR

release-tag:docker:
  stage: release-tag
  tags: [go,high_performance]
  script: go run mage.go -v ReleaseDockerTag

release-tag:debian-ppa:
  stage: release-tag
  tags: [go]
  script: go run mage.go -v ReleaseDebianPPAPreRelease

release-tag:android-sdk:
  stage: release-tag
  tags: [go]
  script: go run mage.go -v ReleaseAndroidSDK

remove-bucket:
  stage: post-release
  tags: [go]
  script: go run mage.go -v RemoveBucket

notify-uptimerobot:
  stage: post-release
  tags: [go]
  script:
    - |
      if [ "$NIGHTLY_BUILD" = "1" -o "$NIGHTLY_BUILD" = "T" -o "$NIGHTLY_BUILD" = "true" -o "$NIGHTLY_BUILD" = "True" -o "$NIGHTLY_BUILD" = "TRUE" ]; then
        curl -so /dev/null -I "$NIGHTLY_UPTIMEROBOT"
      fi
  only:
    - master
